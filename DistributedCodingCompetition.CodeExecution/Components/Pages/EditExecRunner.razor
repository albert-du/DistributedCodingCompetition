@page "/execrunner/{id:guid?}"
@inject ExecRunnerContext ExecRunnerContext
@inject IExecRunnerService ExecRunnerService

<a href="/">back</a>

<EditForm Model="@execRunner">
    <div>
        <label for="Endpoint">Endpoint</label>
        <InputText id="Endpoint" @bind-Value="execRunner.Endpoint" />
    </div>
    <div>
        <label for="Weight"></label>
        <InputNumber id="Weight" @bind-Value="execRunner.Weight" />
    </div>
    <div>
        <label for="Endpoint">Endpoint</label>
        <InputCheckbox id="Endpoint" @bind-Value="execRunner.Enabled" />
    </div>
    <button type="submit" @onclick="SaveRunnerAsync">Save</button>
    <DataAnnotationsValidator />
    <ValidationSummary />
</EditForm>

@code
{
    private ExecRunner execRunner = new();
    private Guid? execRunnerId;

    protected override void OnInitialized()
    {
        if (execRunnerId.HasValue && ExecRunnerContext.ExecRunners.Find(execRunnerId) is ExecRunner runner)
            execRunner = runner;
    }

    private async Task SaveRunnerAsync()
    {
        await ExecRunnerService.RefreshExecRunnerAsync(execRunner);
        if (execRunnerId.HasValue)
        {
            ExecRunnerContext.ExecRunners.Update(execRunner);
        }
        else
        {
            ExecRunnerContext.ExecRunners.Add(execRunner);
        }

        ExecRunnerContext.SaveChanges();
    }
}