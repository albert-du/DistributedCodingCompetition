@page "/auth/login"
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<EditForm Model=model OnValidSubmit=SubmitAsync FormName="Login">
    <label>
        Email
        <InputText id="username" type="email" @bind-Value=model.Email />
        <ValidationMessage For=@(() => model.Email) />
    </label>

    <label>
        Password
        <InputText type="password" @bind-Value=model.Password />
        <ValidationMessage For=@(() => model.Password) />
    </label>

    <button type="submit">Submit</button>

    <div class="text-rose-500">
        <DataAnnotationsValidator />
        <ValidationSummary />
    </div>
</EditForm>

<div>
    @error
</div>

@code {
    [Parameter]
    public string? ReturnUrl { get; set; }
    private string? error;
    private LoginModel model = new();

    private async Task SubmitAsync()
    {
        
    }

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
