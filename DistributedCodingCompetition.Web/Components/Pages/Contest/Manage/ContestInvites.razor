@*
public ICollection<JoinCode> JoinCodes { get; set; } = [];
*@

@page "/contest/{id:guid}/manage/invites"
@inject IApiService ApiService
@inject IModalService ModalService
@rendermode InteractiveServer
<AuthCheck Contest=Id Admin />

<PageTitle>Contest Invites</PageTitle>

<h1 class="text-2xl">Invite to @contestName</h1>

<div>
    @foreach (var code in joinCodes)
    {
        
    }
</div>

@code {
    [Parameter] public Guid Id { get; set; }

    IReadOnlyList<JoinCode> joinCodes = [];
    string contestName = "";

    protected override async Task OnInitializedAsync()
    {
        (var success, var codes) = await ApiService.TryReadJoinCodesAsync(Id);
        if (!success || codes is null)
        {
            ModalService.ShowError("Failed to load join codes", "Internal error");
            return;
        }
        joinCodes = codes;

        (success, var contest)  = await ApiService.TryReadContestAsync(Id);
        if (!success || contest is null)
        {
            ModalService.ShowError("Failed to load contest", "Internal error");
            return;
        }

        contestName = contest.Name;
    }

    async Task SaveAsync()
    {
        
    }
}