@*
    This pseudocomponent checks if the user is authenticated and if they have the required permissions to view the page.

    Usage:
    <AuthCheck />                       // Authenticated Users
    <AuthCheck Id="GUID" />             // Authenticated User
    <AuthCheck Admin />                 // Only System Admins
    <AuthCheck Contest="GUID" />        // Contest Participants/Admins
    <AuthCheck Contest="GUID" Admin />  // Contest Admins

    System admins can view any page, so they are never redirected.
*@
@inject NavigationManager NavigationManager
@inject IContestsService ContestsService
@inject IUserStateService UserStateService
@code {
    [Parameter]
    public bool Admin { get; set; }

    [Parameter]
    public Guid? Contest { get; set; }

    [Parameter]
    public Guid? Id { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        // if a user is not authenticated, redirect to the login page
        if (authenticationStateTask.Result.User?.Identity?.IsAuthenticated is not true)
        {
            NavigationManager.NavigateTo($"auth/login?returnUrl={Uri.EscapeDataString(NavigationManager.ToBaseRelativePath(NavigationManager.Uri))}");
            return;
        }

        // No need to re-redirect if the user is a system admin
        if (authenticationStateTask.Result.User?.IsInRole("Admin") is true)
            return;

        // No need to re-redirect if the user is the same as the Id
        if (Id is not null && (await UserStateService.UserAsync())?.Id! == Id.Value)
            return;

        // Branch off
        if (Contest is not null)
        {
            // Contest Admin
            var user = (await UserStateService.UserAsync())?.Id;
            (var success, var role) = await ContestsService.TryReadContestUserRoleAsync(Contest.Value, user!.Value);
            if (success && (role is ContestRole.Admin || !Admin && role is ContestRole.Participant))
                return;
        }

        // if the page doesn't require anything just return as the user is authenticated at this point.
        if (!Admin && Contest is null && Id is null)
            return;

        NavigationManager.NavigateTo("dashboard");
    }
}